{"@context":"http://schema.org","@type":"CreativeWork","name":"FOSUser Bundle Integration","text":"\u003ch1\u003eFOSUser Bundle Integration\u003c/h1\u003e\n\n\u003cp\u003eAPI Platform Core is shipped with a bridge for \u003ca href=\"https://github.com/FriendsOfSymfony/FOSUserBundle\"\u003eFOSUserBundle\u003c/a\u003e. If the\nFOSUser bundle is enabled, this bridge will use its \u003ccode\u003eUserManager\u003c/code\u003e to create, update and delete user resources.\u003c/p\u003e\n\n\u003ch2\u003eCreating a \u003ccode\u003eUser\u003c/code\u003e Entity with Serialization Groups\u003c/h2\u003e\n\n\u003cp\u003eHere’s an example of declaration of a \u003ca href=\"https://github.com/FriendsOfSymfony/FOSUserBundle/blob/master/Resources/doc/index.rst#a-doctrine-orm-user-class\"\u003eDoctrine ORM User class\u003c/a\u003e.\nYou need to use serialization groups to hide some properties like \u003ccode\u003eplainPassword\u003c/code\u003e (only in read) and \u003ccode\u003epassword\u003c/code\u003e. The properties\nshown are handled with the \u003ca href=\"serialization-groups-and-relations.jsonld#normalization\"\u003e\u003ccode\u003enormalization_context\u003c/code\u003e\u003c/a\u003e, while the properties\nyou can modify are handled with \u003ca href=\"serialization-groups-and-relations.jsonld#denormalization\"\u003e\u003ccode\u003edenormalization_context\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eFirst register the following service:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"language-php\"\u003e\u0026lt;?php\n\n// src/AppBundle/Entity/User.php\n\nnamespace AppBundle\\Entity;\n\nuse ApiPlatform\\Core\\Annotation\\ApiResource;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse FOS\\UserBundle\\Model\\User as BaseUser;\nuse FOS\\UserBundle\\Model\\UserInterface;\nuse Symfony\\Component\\Serializer\\Annotation\\Groups;\n\n/**\n * @ORM\\Entity\n * @ApiResource(attributes={\n *     \u0026#34;normalization_context\u0026#34;={\u0026#34;groups\u0026#34;={\u0026#34;user\u0026#34;, \u0026#34;user-read\u0026#34;}},\n *     \u0026#34;denormalization_context\u0026#34;={\u0026#34;groups\u0026#34;={\u0026#34;user\u0026#34;, \u0026#34;user-write\u0026#34;}}\n * })\n */\nclass User extends BaseUser\n{\n    /**\n     * @ORM\\Id\n     * @ORM\\Column(type=\u0026#34;integer\u0026#34;)\n     * @ORM\\GeneratedValue(strategy=\u0026#34;AUTO\u0026#34;)\n     */\n    protected $id;\n\n    /**\n     * @Groups({\u0026#34;user\u0026#34;})\n     */\n    protected $email;\n\n    /**\n     * @ORM\\Column(type=\u0026#34;string\u0026#34;, length=255, nullable=true)\n     * @Groups({\u0026#34;user\u0026#34;})\n     */\n    protected $fullname;\n\n    /**\n     * @Groups({\u0026#34;user-write\u0026#34;})\n     */\n    protected $plainPassword;\n\n    /**\n     * @Groups({\u0026#34;user\u0026#34;})\n     */\n    protected $username;\n\n    public function setFullname($fullname)\n    {\n        $this-\u0026gt;fullname = $fullname;\n\n        return $this;\n    }\n    public function getFullname()\n    {\n        return $this-\u0026gt;fullname;\n    }\n\n    public function isUser(UserInterface $user = null)\n    {\n        return $user instanceof self \u0026amp;\u0026amp; $user-\u0026gt;id === $this-\u0026gt;id;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ePrevious chapter: \u003ca href=\"operation-path-naming.jsonld\"\u003eOperation Path Naming\u003c/a\u003e\nNext chapter: \u003ca href=\"angularjs-integration.jsonld\"\u003eAngularJS integration\u003c/a\u003e\u003c/p\u003e\n","author":[{"@type":"Person","Name":"hamza","email":"hamza@oblady.fr"},{"@type":"Person","Name":"Kévin Dunglas","email":"dunglas@gmail.com"},{"@type":"Person","Name":"Kévin Dunglas","email":"dunglas@gmail.com"},{"@type":"Person","Name":"Kevin Saliou","email":"kevin@saliou.name"},{"@type":"Person","Name":"Kevin Saliou","email":"kevin@saliou.name"},{"@type":"Person","Name":"Ener-Getick","email":"egetick@gmail.com"},{"@type":"Person","Name":"Kevin Saliou","email":"kevin@saliou.name"}],"dateCreated":"2016-03-30T22:29:36+02:00","dateModified":"2016-09-30T11:19:24+02:00"}